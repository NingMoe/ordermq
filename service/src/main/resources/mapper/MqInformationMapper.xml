<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.donut.ordermq.mapper.MqInformationDao">
  <resultMap id="BaseResultMap" type="cn.donut.ordermq.entity.MqInformation">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="change_type" jdbcType="TINYINT" property="changeType" />
    <result column="data_type" jdbcType="VARCHAR" property="dataType" />
    <result column="primary_key" jdbcType="INTEGER" property="primaryKey" />
    <result column="product_line" jdbcType="INTEGER" property="productLine" />
    <result column="is_pulish" jdbcType="TINYINT" property="isPulish" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="push_time" jdbcType="TIMESTAMP" property="pushTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="fail_count" jdbcType="INTEGER" property="failCount" />
    <result column="is_delete" jdbcType="TINYINT" property="isDelete" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, change_type, data_type, primary_key, product_line, is_pulish, create_time, push_time, 
    update_time, fail_count, is_delete
  </sql>
  <select id="selectByExample" parameterType="cn.donut.ordermq.entity.MqInformationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from mq_information
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from mq_information
    where id = #{id,jdbcType=INTEGER}
  </select>
  <insert id="insert" parameterType="cn.donut.ordermq.entity.MqInformation" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
    insert into mq_information (id, change_type, data_type, 
      primary_key, product_line, is_pulish, 
      create_time, push_time, update_time, 
      fail_count, is_delete)
    values (#{id,jdbcType=INTEGER}, #{changeType,jdbcType=TINYINT}, #{dataType,jdbcType=VARCHAR}, 
      #{primaryKey,jdbcType=INTEGER}, #{productLine,jdbcType=INTEGER}, #{isPulish,jdbcType=TINYINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{pushTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{failCount,jdbcType=INTEGER}, #{isDelete,jdbcType=TINYINT})
  </insert>
  <update id="updateByExampleSelective" parameterType="map">
    update mq_information
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.changeType != null">
        change_type = #{record.changeType,jdbcType=TINYINT},
      </if>
      <if test="record.dataType != null">
        data_type = #{record.dataType,jdbcType=VARCHAR},
      </if>
      <if test="record.primaryKey != null">
        primary_key = #{record.primaryKey,jdbcType=INTEGER},
      </if>
      <if test="record.productLine != null">
        product_line = #{record.productLine,jdbcType=INTEGER},
      </if>
      <if test="record.isPulish != null">
        is_pulish = #{record.isPulish,jdbcType=TINYINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.pushTime != null">
        push_time = #{record.pushTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.failCount != null">
        fail_count = #{record.failCount,jdbcType=INTEGER},
      </if>
      <if test="record.isDelete != null">
        is_delete = #{record.isDelete,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update mq_information
    set id = #{record.id,jdbcType=INTEGER},
      change_type = #{record.changeType,jdbcType=TINYINT},
      data_type = #{record.dataType,jdbcType=VARCHAR},
      primary_key = #{record.primaryKey,jdbcType=INTEGER},
      product_line = #{record.productLine,jdbcType=INTEGER},
      is_pulish = #{record.isPulish,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      push_time = #{record.pushTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      fail_count = #{record.failCount,jdbcType=INTEGER},
      is_delete = #{record.isDelete,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.donut.ordermq.entity.MqInformation">
    update mq_information
    <set>
      <if test="changeType != null">
        change_type = #{changeType,jdbcType=TINYINT},
      </if>
      <if test="dataType != null">
        data_type = #{dataType,jdbcType=VARCHAR},
      </if>
      <if test="primaryKey != null">
        primary_key = #{primaryKey,jdbcType=INTEGER},
      </if>
      <if test="productLine != null">
        product_line = #{productLine,jdbcType=INTEGER},
      </if>
      <if test="isPulish != null">
        is_pulish = #{isPulish,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="pushTime != null">
        push_time = #{pushTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="failCount != null">
        fail_count = #{failCount,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.donut.ordermq.entity.MqInformation">
    update mq_information
    set change_type = #{changeType,jdbcType=TINYINT},
      data_type = #{dataType,jdbcType=VARCHAR},
      primary_key = #{primaryKey,jdbcType=INTEGER},
      product_line = #{productLine,jdbcType=INTEGER},
      is_pulish = #{isPulish,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      push_time = #{pushTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      fail_count = #{failCount,jdbcType=INTEGER},
      is_delete = #{isDelete,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>

</mapper>